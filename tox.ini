[tox]
isolated_build = True
envlist = test

[testenv]
skip_install = true
# Requirements to run, e.g., Python tests do not include requirements for building the
# C++ library such as cmake or conan. In particular, conan freezes some package versions
# that are also runtime requirements (pyyaml). This would be bad, since we want to
# ensure scipp works for users, i.e., with "current" library versions that they would get
# when installing. Therefore we build the library separately.
deps = -r requirements/test.txt
setenv = PYTHONPATH = {toxinidir}{/}install
commands = python -m pytest -n auto -v tests

[testenv:docs]
deps =
  {posargs}
  -r requirements/docs.txt
allowlist_externals = find
commands =
  python -m sphinx -j2 -v -b html -d doctrees docs html
  python -m sphinx -j2 -v -b doctest -d doctrees docs html
  find html -type f -name "*.ipynb" -not -path "html/_sources/*" -delete

[testenv:linkcheck]
description = Run Sphinx linkcheck
deps = -r requirements/docs.txt
commands =
  python -m sphinx -j4 -v -b linkcheck -d doctrees docs html

[testenv:static]
description = Code formatting and static analysis
deps = -r requirements/static.txt
allowlist_externals = find
commands =
  find lib -type f -regex '.*\.\(cpp\|h\|tcc\)' -exec clang-format -i \{\} +
  find lib CMakeLists.txt -type f -name CMakeLists.txt -or -name '*.cmake' -not -path './lib/cmake/sanitizers-cmake/*' -exec cmake-format -i \{\} +
  nbstripout --extra-keys 'metadata.language_info.version cell.metadata.jp-MarkdownHeadingCollapsed' --strip-empty-cells .
  yapf --recursive --in-place --exclude .tox .
  flake8 .

[testenv:lib]
description = Run cmake, build the library, and run the C++ tests. May be used for local development, but CI is currently using conda instead.
deps = -r requirements/build.txt
commands =
  cmake --preset base -DCONAN_TBB=ON
  cmake --build --preset build
  ctest --preset test
