name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}  # required for conda env

jobs:
  build_conda:
    name: Package build (${{ matrix.variant.target }}, py${{ matrix.python-version }})
    runs-on: ${{ matrix.variant.os }}
    strategy:
      matrix:
        variant:
          - {os: ubuntu-20.04, target: linux_64}
          - {os: macos-11, target: osx_64}
          - {os: macos-11, target: osx_arm64}
          - {os: windows-2019, target: win_64}
        python-version: ["3.8", "3.9"]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0  # history required so cmake can determine version

      - uses: conda-incubator/setup-miniconda@v2
      - run: conda install --channel conda-forge --yes conda-build
      - run: conda build --channel conda-forge --variant-config-files=conda/variants/${{ matrix.variant.target }}.yaml --python=${{ matrix.python-version }} --no-anaconda-upload --override-channels --output-folder conda/package conda

      - uses: actions/upload-artifact@v2
        with:
          name: conda-package-${{ matrix.variant.os }}-py${{ matrix.python-version }}
          path: conda/package/*/scipp*.tar.bz2

  build_sdist:
    name: Build SDist
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0  # history required so cmake can determine version

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2019]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0  # history required so cmake can determine version

    - uses: pypa/cibuildwheel@v2.10.1
      env:
        MACOSX_DEPLOYMENT_TARGET: "10.15"

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: wheelhouse/*.whl

  upload_packages:
    name: Deploy packages
    needs: [build_conda, build_sdist, build_wheels]
    runs-on: ubuntu-20.04
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v2
      - uses: conda-incubator/setup-miniconda@v2
      - run: conda install -c conda-forge --yes anaconda-client
      - run: anaconda --token ${{ secrets.ANACONDATOKEN }} upload --user scipp --label main $(ls conda-package-*/*/*.tar.bz2)
      - uses: actions/setup-python@v2

      - uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

  manage-versions:
    name: Manage Versions
    runs-on: ubuntu-20.04
    outputs:
      version-new: ${{ steps.version.outputs.new }}
      version-replaced: ${{ steps.version.outputs.replaced }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - run: python -m pip install --upgrade pip
      - run: python -m pip install -r requirements/ci.txt
      - name: Set outputs
        id: version
        run: |
          echo "::set-output name=new::$(python docs/version.py --repo=scipp --version=${GITHUB_REF_NAME} --action=is-new)"
          echo "::set-output name=replaced::$(python docs/version.py --repo=scipp --version=${GITHUB_REF_NAME} --action=get-replaced)"

  replaced-docs:
    needs: [upload_packages, manage-versions]
    if: github.event_name == 'release' && github.event.action == 'published' && needs.manage-versions.outputs.version-new == 'True'
    uses: ./.github/workflows/docs.yml
    with:
      publish: true
      version: ${{ needs.manage-versions.outputs.version-replaced }}
    secrets: inherit

  docs:
    needs: upload_packages
    uses: ./.github/workflows/docs.yml
    with:
      publish: ${{ github.event_name == 'release' && github.event.action == 'published' }}
      version: ${{ github.ref_name }}
    secrets: inherit
