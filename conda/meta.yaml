# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2022 Scipp contributors (https://github.com/scipp)

# Note:
#
# The conda documentation recommends placing version number in the
# conda_build_config.yaml file, instead of directly in this meta.yaml file:
# https://docs.conda.io/projects/conda-build/en/latest/resources/variants.html
# It seems the primary advantage of doing this is that it allows matrix builds from a
# single conda-build command.
# For now, the only matrix-style building we are doing is the python version,
# which is set via the `--python` command line argument anyway, because we are
# parallelising our CI builds.
# A matrix build from conda-build directly would have to perform the lib solving for
# each version, and using multiple workers on our CI is faster than building all python
# versions in a single conda-build step.

package:
  name: scipp
  # Get version number from most recent Git tag
  version: {{ GIT_DESCRIBE_TAG }}

source:
  path: ..

requirements:
  build:
    - {{ compiler('cxx') }}
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - cmake
    - cppcheck [linux64]
    - git
    - markupsafe>=1.1.1,<2.1.0  # see https://github.com/pallets/markupsafe/issues/284
    - ninja
    - python
  host:
    - python
    - tbb-devel=2020.2.*
  run:
    - confuse
    - numpy
    - pyyaml
    - tbb=2020.2.*
    - graphlib-backport # for python < 3.9

# Only the cmake-package-test works when cross compiling.
# But it is not very important at the moment and
# leaving out the entire test section speeds up conda build
{% if build_platform == target_platform %}
test:
  imports:
    - scipp
  requires:
    - {{ compiler('cxx') }}
    - cmake
    - h5py
    - hypothesis
    - ipympl
    - ipywidgets
    - markupsafe>=1.1.1,<2.1.0  # see https://github.com/pallets/markupsafe/issues/284
    - matplotlib-base
    - pandas
    - pytest
    - pythreejs
    - python-graphviz
    - scipy>=1.7.0
    - tbb-devel=2020.2.*
    - xarray
  files:
    - cmake-package-test/
  source_files:
    - tests/
  commands:
    - python -m pytest -v tests
    - python cmake-package-test/build.py
{% endif %}

build:
  # Build number is number of Git commits since last tag, if that fails use 0
  number: {{ environ.get('GIT_DESCRIBE_NUMBER', 0) }}
  script:
    # Passing Python_EXECUTABLE ensures that cmake sees the host interpreter instead of build.
    - cmake --preset package-{{ target_platform }} -DPython_EXECUTABLE=$PYTHON
    - cmake --build --preset build
    - ctest --preset test  # [build_platform == target_platform]

about:
  home: https://scipp.github.io/
  license: BSD-3-Clause
  summary: Multi-dimensional data arrays with labeled dimensions
  description: Multi-dimensional data arrays with labeled dimensions
  dev_url: https://github.com/scipp/scipp
  doc_url: https://scipp.github.io/
