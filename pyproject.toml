[build-system]
requires = [
  "setuptools>=68",
  "conan==1.64.1",
  "scikit-build-core"
]
build-backend = "scikit_build_core.build"

[project]
name = "scipp"
description = "Multi-dimensional data arrays with labeled dimensions"
readme = "README.md"
license = { "file" = "LICENSE" }
authors = [{ name = "Scipp contributors (https://github.com/scipp)" }]
classifiers = [
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
requires-python = ">=3.10"
dependencies = [
  "numpy >= 1.20",
]
dynamic = ["version"]

[project.urls]
"Documentation" = "https://scipp.github.io/"
"Source" = "https://github.com/scipp/scipp"
"Bug Tracker" = "https://github.com/scipp/scipp/issues"
"Changelog" = "https://scipp.github.io/about/release-notes.html"

[project.optional-dependencies]
test = [
  "pytest",
  "matplotlib",
  "bs4",
  "ipython",
]
extra = [
  "h5py",
  "scipy>=1.7.0",
  "graphviz",
  "pooch",
  "plopp",
  "matplotlib"
]
all = [
    "scipp[extra]",
    "ipympl",
    "ipython",
    "ipywidgets",
    "jupyterlab",
    "jupyterlab-widgets",
    "jupyter_nbextensions_configurator",
    "nodejs",
    "pythreejs",
]

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
cmake.version = ">=3.21"
wheel.install-dir = "scipp"

[tool.setuptools_scm]
version_file = "src/scipp/_version.py"

[tool.cibuildwheel]
archs = ["auto64"]
test-requires = ["scipy", "graphviz", "pooch", "hypothesis"]
test-extras = ["test"]
test-command = "pytest --ignore {project}/tests/plotting --ignore {project}/tests/hypothesis/ --ignore {project}/tests/experimental/ {project}/tests"
# PyPy builds fail with an error about ninja, probably https://github.com/pypa/setuptools/issues/2912
# tbb-devel not available for musllinux
skip = ["pp*", "*musllinux*"]
build-verbosity = 1

[tool.bandit.assert_used]
skips = [
  "*/*_test.py",
  "src/scipp/testing/assertions.py"
]

[tool.codespell]
ignore-words-list = [
    "elemt",
    # Codespell wants "socioeconomic" which seems to be the standard spelling.
    # But we use the word in our code of conduct which is the contributor covenant.
    # Let's not modify it if we don't have to.
    "socio-economic",
]
skip = "./.git,./install,./build,./cmake-build*,./lib/cmake/sanitizers-cmake,./.tox,*/*_cache,*/.virtual_documents,*/.ipynb_checkpoints,*.pdf,*.svg"

[tool.ruff]
line-length = 88
extend-include = ["*.ipynb"]
extend-exclude = [
    ".*", "__pycache__", "build", "cmake-build-*", "dist", "install",
    # Autogenerated, so no need to reformat:
    "src/scipp/core/cpp_classes.pyi",
    # Not strictly needed but it should speed up the process
    "src/include", "src/lib",
]

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
select = ["B", "C4", "DTZ", "E", "F", "G", "I", "PERF", "PGH", "PT", "PYI", "RUF", "S", "T20", "W"]
ignore = [
    # Conflict with ruff format, see
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "COM812", "COM819", "D206", "D300", "E111", "E114", "E117", "ISC001", "ISC002", "Q000", "Q001", "Q002", "Q003", "W191",
]
fixable = ["B010", "I001", "PT001"]
isort.known-first-party = ["scipp"]
pydocstyle.convention = "numpy"

[tool.ruff.lint.per-file-ignores]
# those files rely on import order
"src/scipp/__init__.py" = ["I"]
"src/scipp/core/__init__.py" = ["I"]
# asserts are fine because this code is meant to be used with pytest
"src/scipp/testing/*" = ["S101"]
"tests/*" = [
    "S101",  # asserts are fine in tests
    "B018",  # 'useless expressions' are ok because some tests just check for exceptions
]
"tools/*" = [
    "S101",  # asserts are fine, we do not run tools with optimizations
    "T201",  # printing is ok for internal tools
]
"*.ipynb" = [
    "E501",  # longer lines are sometimes more readable
    "I",  # we don't collect imports at the top
    "S101",  # asserts are used for demonstration and are safe in notebooks
    "T201",  # printing is ok for demonstration purposes
]
# 'Useless' statement to demonstrate how Jupyter generates output
"representations-and-tables.ipynb"= ["B018"]

[tool.ruff.format]
quote-style = "preserve"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = "tests"
addopts = """
--strict-config
--strict-markers
--import-mode=importlib
-ra
-v
"""
filterwarnings = [
  'error',
  'ignore:You are running a "Debug" build of scipp:',
  # From Hypothesis; unclear why it warns, this seems to be an internal bug.
  'ignore:The recursion limit will not be reset',
  'ignore:sc.geometry.rotation_matrix_from_quaternion_coeffs has been deprecated:scipp.VisibleDeprecationWarning',
  # Comes from pytest_asyncio and is not our fault.
  "ignore:The 'asyncio_mode' default value will change to 'strict' in future:DeprecationWarning",
  'ignore::scipy.optimize._optimize.OptimizeWarning',
  'ignore:Support for mapping types has been deprecated and will be dropped in a future release.:DeprecationWarning',
  'ignore:sc.DataArray.attrs has been deprecated:scipp.VisibleDeprecationWarning',
  # Triggered by h5py
  'ignore:`product` is deprecated as of NumPy 1.25.0:DeprecationWarning'
]

[tool.mypy]
strict = true
ignore_missing_imports = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
warn_unreachable = true
plugins = "numpy.typing.mypy_plugin"

# Exclude files that have not yet been updated / fixed to pass type checks.
# This list should only shrink, never grow.
exclude = [
    'scipp/__init__\.py',
    'scipp/compat/dict\.py',
    'scipp/compat/pandas_compat\.py',
    'scipp/compat/wrapping\.py',
    'scipp/compat/xarray_compat\.py',
    'scipp/coords/',
    'scipp/core/__init__\.py',
    'scipp/curve_fit\.py',
    'scipp/data/__init__\.py',
    'scipp/format/formatter\.py',
    'scipp/io/hdf5\.py',
    'scipp/logging\.py',
    'scipp/object_list\.py',
    'scipp/operations\.py',
    'scipp/reduction\.py',
    'scipp/spatial/__init__\.py',
    'scipp/scipy/integrate/__init__\.py',
    'scipp/scipy/optimize/__init__\.py',
    'scipp/testing/strategies\.py',
    'scipp/utils/profile\.py',
    'scipp/utils/collapse_and_slices\.py',
    'scipp/visualization/formatting_html\.py',
    'scipp/visualization/formatting_datagroup_html\.py',
    'scipp/visualization/show\.py',

    '^benchmarks/',
    '^docs/',
    '^lib/',
    '^tests/',
    '^tools/',
]

[[tool.mypy.overrides]]
module = [
    "scipy",
]
ignore_missing_imports = true
